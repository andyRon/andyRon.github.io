<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欣欣向戎</title>
  
  <subtitle>AndyRon&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://andyron.com/"/>
  <updated>2018-08-31T15:54:22.136Z</updated>
  <id>http://andyron.com/</id>
  
  <author>
    <name>AndyRon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《我所理解的生活》记录</title>
    <link href="http://andyron.com/2018/wosuolijiedeshenghuo.html"/>
    <id>http://andyron.com/2018/wosuolijiedeshenghuo.html</id>
    <published>2018-08-31T15:41:30.000Z</published>
    <updated>2018-08-31T15:54:22.136Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;注：&lt;/code&gt; 本文是我几年前写的文章，整理时发现还可以再看看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/0069RVTdgy1futbbk56k0j31kw23vto3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;我所理解的生活就是除了造谣以外，去造其他一切东西。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这世道让那些不说粗话但最缺德的人能做道德评判家，这世道让那些话不脏但心眼脏、手段脏的人当道。&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;我所理解的生活就是做着自己喜欢的事件，养活自己，养活家人。&lt;/p&gt;
&lt;p&gt;你在台面上看见我成功一次，我在台面下就干砸十次，那又如何，我又没死，不停地干就行了，人们只会记住你成功的那一次。&lt;/p&gt;
&lt;p&gt;我只负责制造作品，不负责用户体验，也没有售后服务，更不会根据大家的口味来改进。  &lt;/p&gt;
&lt;p&gt;充满挫败甚至后悔，但遗憾并不多。 &lt;/p&gt;
&lt;p&gt;得之我幸，不得我也没什么不幸。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>《黑客与画家》记录</title>
    <link href="http://andyron.com/2018/hackers-and-painters.html"/>
    <id>http://andyron.com/2018/hackers-and-painters.html</id>
    <published>2018-08-31T15:05:52.000Z</published>
    <updated>2018-08-31T15:42:51.089Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;注：&lt;/code&gt; 本文是我几年前写的文章，整理时发现还可以再看看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/0069RVTdgy1futackby83j31kw23vh1p.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;保罗-格雷厄姆其人其事&quot;&gt;&lt;a href=&quot;#保罗-格雷厄姆其人其事&quot; class=&quot;headerlink&quot; title=&quot;保罗-格雷厄姆其人其事&quot;&gt;&lt;/a&gt;保罗-格雷厄姆其人其事&lt;/h3&gt;&lt;p&gt;“运营创业公司，每天都像在战斗；而为大公司工作，就像在窒息中挣扎。”&lt;br&gt;&lt;strong&gt; “我生活的中得一切，都正在成为计算机。所以，如果你想理解我们目前的世界以及它的未知动向，那么多了解一些黑客的想法会对你有帮助。” &lt;/strong&gt;&lt;br&gt;Y Combinator&lt;br&gt;创始人本身比他的创意更重要&lt;br&gt;内耗&lt;/p&gt;
&lt;h3 id=&quot;译者序&quot;&gt;&lt;a href=&quot;#译者序&quot; class=&quot;headerlink&quot; title=&quot;译者序&quot;&gt;&lt;/a&gt;译者序&lt;/h3&gt;&lt;p&gt;表面上这是一个机器的时代，但是实际上机器的设计者决定了我们的时代。&lt;br&gt;stallman：“出于兴趣而解决某个难题，不管它有没用，这就是黑客。” 好玩，高智商，探索精神&lt;br&gt;真正的黑客致力于改变世界，让世界运转得更好。&lt;/p&gt;
&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;计算机世界就像是智力世界的大西部，在那里没有你不敢想得事件，只要你愿意承担冒险后果。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>为博客添加Disqus评论系统</title>
    <link href="http://andyron.com/2018/comment-disqus.html"/>
    <id>http://andyron.com/2018/comment-disqus.html</id>
    <published>2018-08-31T08:50:58.000Z</published>
    <updated>2018-08-31T09:37:30.540Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;给博客添加一个评论系统，考虑了好几个，但最终还是选择了&lt;a href=&quot;https://disqus.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Disqus&lt;/a&gt;，考虑一下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;之前非常受欢迎的多说，某原因关闭了，现在国内也有非常多好的评论系统，但就是担心又出现某原因关闭，那就麻烦了&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://disqus.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Disqus&lt;/a&gt;唯一的问题就是在墙外，我考虑一下，访问我博客十有八九都是做技术的，梯子肯定是多的是，😀&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://andyron.com/categories/hexo/"/>
    
    
      <category term="Disqus" scheme="http://andyron.com/tags/Disqus/"/>
    
  </entry>
  
  <entry>
    <title>用LeanClound给hexo+next博客添加文章阅读数</title>
    <link href="http://andyron.com/2018/leanclound-hexo-next.html"/>
    <id>http://andyron.com/2018/leanclound-hexo-next.html</id>
    <published>2018-08-31T07:35:36.000Z</published>
    <updated>2018-08-31T09:37:25.133Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://andyron.com&quot;&gt;个人博客&lt;/a&gt;之前用的&lt;a href=&quot;http://theme-next.iissnan.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;NexT&lt;/a&gt; 框架介绍 &lt;strong&gt;不蒜子统计&lt;/strong&gt; 来统计文章阅读数、网站访问人数和网站访问总数。但是总是发现文章阅读数老是出现问题，因此把文章阅读数换成用&lt;a href=&quot;https://leancloud.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeanCloud&lt;/a&gt;来统计，看起来也方便。&lt;a href=&quot;https://leancloud.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LeanCloud&lt;/a&gt;的免费的开发版完全满足了我博客这种小网站的需求了。&lt;br&gt;配置起来也很方便，下面做个记录：&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://andyron.com/categories/hexo/"/>
    
    
      <category term="LeanClound" scheme="http://andyron.com/tags/LeanClound/"/>
    
  </entry>
  
  <entry>
    <title>关于iOS多线程，这边勉强可以看看(OC&amp;Swift)</title>
    <link href="http://andyron.com/2018/ios-multithreading.html"/>
    <id>http://andyron.com/2018/ios-multithreading.html</id>
    <published>2018-08-26T08:29:06.000Z</published>
    <updated>2018-08-31T03:17:21.801Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-4dd42c5a74e7eac7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;搜多线程谷歌给的第一张图🙄&quot;&gt;&lt;/p&gt;
&lt;p&gt;iOS开发多线程总是绕不过的坎，看了很多前辈们优秀的文章，如：&lt;a href=&quot;https://www.jianshu.com/p/51fd1362249e&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于iOS多线程，我说，你听，没准你就懂了！&lt;/a&gt;、&lt;a href=&quot;http://www.jianshu.com/p/6e6f4e005a0b&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;谈iOS多线程(NSThread、NSOperation、GCD)编程&lt;/a&gt;、&lt;a href=&quot;http://www.jianshu.com/p/2d57c72016c6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS多线程：『GCD』详尽总结&lt;/a&gt;、&lt;a href=&quot;https://www.jianshu.com/p/cbaeea5368b1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS多线程：『pthread、NSThread』详尽总结&lt;/a&gt;、&lt;a href=&quot;https://www.jianshu.com/p/4b1d77054b35&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS多线程：『NSOperation、NSOperationQueue』详尽总结&lt;/a&gt;、&lt;a href=&quot;https://www.jianshu.com/p/0b0d9b1f1f19&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于iOS多线程，你看我就够了&lt;/a&gt;等，但不自己整理一下，敲一下代码总是感觉不深刻 ，于是就有这篇文章，断断续续整理了好久。  &lt;/p&gt;
&lt;p&gt;示例我尽量把不同知识点代码独立开，看着简单一些，容易理解。示例代码我都用OC和Swift分别写了，不过文中都是以OC说明的，英文如果用两种语言一起，看起来可能比较乱，文章也会更加长（已经非常长了😂😂）。&lt;br&gt;Swift写法可能有比较大区别，也有些功能取消，但看一下代码应该能明白了。&lt;br&gt;文中的所有示例代码：&lt;strong&gt;&lt;a href=&quot;https://github.com/andyRon/iOS-Multithreading&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/iOS-Multithreading&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先看个大概：&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-29de3060eff432c4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="Multithreading" scheme="http://andyron.com/tags/Multithreading/"/>
    
      <category term="GCD" scheme="http://andyron.com/tags/GCD/"/>
    
      <category term="NSThread" scheme="http://andyron.com/tags/NSThread/"/>
    
      <category term="NSOperation" scheme="http://andyron.com/tags/NSOperation/"/>
    
  </entry>
  
  <entry>
    <title>OC中的键/值编码(KVC)</title>
    <link href="http://andyron.com/2018/ios-oc-kvc-begin.html"/>
    <id>http://andyron.com/2018/ios-oc-kvc-begin.html</id>
    <published>2018-08-24T11:50:59.000Z</published>
    <updated>2018-08-24T11:52:40.798Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-KVC-的定义&quot;&gt;&lt;a href=&quot;#1-KVC-的定义&quot; class=&quot;headerlink&quot; title=&quot;1. KVC 的定义&quot;&gt;&lt;/a&gt;1. KVC 的定义&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;键/值编码(Key-value coding，KVC)&lt;/strong&gt; 可以允许开发者通过Key名访问对象的属性或给对象的属性赋值, 而不需要调用明确的存取方法，并有一组api供开发者使用，像操作字典一样操作对象属性/成员变量/关联对象。&lt;br&gt;这样就可以在 &lt;em&gt;运行时动态地访问和修改&lt;/em&gt; 对象的属性。而不是在编译时确定。这种机制不属于Objective-C语言的特性，而是Cocoa提供的一种特性。&lt;/p&gt;
&lt;p&gt;通过定义一个&lt;code&gt;NSObject&lt;/code&gt;的类别&lt;code&gt;NSKeyValueCoding&lt;/code&gt;来实现KVC功能。因此所有继承了&lt;code&gt;NSObject&lt;/code&gt;的类都支持KVC。&lt;br&gt;&lt;code&gt;NSKeyValueCoding&lt;/code&gt;的四个重要方法：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;- (nullable id)valueForKey:(NSString *)key;                          //直接通过Key来取值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (void)setValue:(nullable id)value forKey:(NSString *)key;          //通过Key来设值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (nullable id)valueForKeyPath:(NSString *)keyPath;                  //通过KeyPath来取值&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;- (void)setValue:(nullable id)value forKeyPath:(NSString *)keyPath;  //通过KeyPath来设值&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="OC" scheme="http://andyron.com/tags/OC/"/>
    
      <category term="KVC" scheme="http://andyron.com/tags/KVC/"/>
    
  </entry>
  
  <entry>
    <title>OS数据持久化小结</title>
    <link href="http://andyron.com/2018/ios-persistdata.html"/>
    <id>http://andyron.com/2018/ios-persistdata.html</id>
    <published>2018-08-23T15:23:29.000Z</published>
    <updated>2018-08-23T15:29:08.335Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;持久化就是把数据保存在硬盘上而不是内存里，程序重启后数据不会消失。iOS中数据持久化方法有：&lt;strong&gt;plist文件（属性列表）&lt;/strong&gt;、&lt;strong&gt;UserDefaults&lt;/strong&gt;、&lt;strong&gt;NSKeyedArchiver（归档）&lt;/strong&gt;、&lt;strong&gt;SQLite3&lt;/strong&gt;、&lt;strong&gt;CoreData&lt;/strong&gt;等，另外还有&lt;a href=&quot;https://link.jianshu.com/?t=https://github.com/ccgus/fmdb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;FMDB&lt;/strong&gt;&lt;/a&gt;（用OC封装的SQLite库）、&lt;a href=&quot;https://github.com/realm/realm-cocoa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;realm&lt;/a&gt;（代替&lt;strong&gt;SQLite3&lt;/strong&gt;和&lt;strong&gt;CoreData&lt;/strong&gt;新的数据库）。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>初识iOS事情处理机制</title>
    <link href="http://andyron.com/2018/ios-event-begin.html"/>
    <id>http://andyron.com/2018/ios-event-begin.html</id>
    <published>2018-08-23T04:20:02.000Z</published>
    <updated>2018-08-23T04:24:33.049Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;事件的生命周期：&lt;br&gt;　　事件的产生和传递（事件如何从父控件传递到子控件并寻找到最合适的view、寻找最合适的view的底层实现、拦截事件的处理）-&amp;gt;找到最合适的view后事件的处理（touches方法的重写，也就是事件的响应）&lt;/p&gt;
&lt;p&gt;iOS中的事件可以分为3大类型：&lt;br&gt;触摸事件&lt;br&gt;加速计事件&lt;br&gt;远程控制事件&lt;br&gt;这里只讨论iOS中的触摸事件。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="事件" scheme="http://andyron.com/tags/%E4%BA%8B%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>iOS tutorial 15：实现计算器界面布局--Masonry和SnapKit的学习</title>
    <link href="http://andyron.com/2018/ios-tutorial-15.html"/>
    <id>http://andyron.com/2018/ios-tutorial-15.html</id>
    <published>2018-08-17T14:26:08.000Z</published>
    <updated>2018-08-22T14:28:16.231Z</updated>
    
    <summary type="html">
    
      &lt;p&gt; &lt;a href=&quot;https://github.com/SnapKit/Masonry&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Masonry&lt;/a&gt;和&lt;a href=&quot;https://github.com/SnapKit/SnapKit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SnapKit&lt;/a&gt;分别是OC、Swift的界面布局框架，而且开发者相同。&lt;br&gt;分别用这两个框架实现一个简单计算器界面：&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-9f9bbb3d0e61988f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;完全代码：&lt;a href=&quot;https://github.com/andyRon/LearniOSByProject/tree/master/101-MasonryDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;LearniOSByProject/101-MasonryDemo&lt;/strong&gt;&lt;/a&gt;  和  &lt;a href=&quot;https://github.com/andyRon/LearniOSByProject/tree/master/114-SnapKitDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;strong&gt;LearniOSByProject/114-SnapKitDemo&lt;/strong&gt;&lt;/a&gt; &lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
      <category term="iOS tutorial" scheme="http://andyron.com/categories/iOS/iOS-tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>iOS tutorial 14：简单的下拉菜单 -- dropDownMenu</title>
    <link href="http://andyron.com/2018/ios-tutorial-14.html"/>
    <id>http://andyron.com/2018/ios-tutorial-14.html</id>
    <published>2018-08-17T14:21:17.000Z</published>
    <updated>2018-08-22T14:27:29.523Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-c719cb0a47833eab.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;详细代码： &lt;strong&gt;&lt;a href=&quot;https://github.com/andyRon/LearniOSByProject/tree/master/100-dropDownMenu&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;dropDownMenu&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
      <category term="iOS tutorial" scheme="http://andyron.com/categories/iOS/iOS-tutorial/"/>
    
    
  </entry>
  
  <entry>
    <title>整理之前学的iOS小项目合集——LearniOSByProject</title>
    <link href="http://andyron.com/2018/learniosbyproject.html"/>
    <id>http://andyron.com/2018/learniosbyproject.html</id>
    <published>2018-08-11T02:48:16.000Z</published>
    <updated>2018-08-16T02:51:20.880Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/andyRon/LearniOSByProject&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;LearniOSByProject&lt;/a&gt;&lt;/strong&gt;本来是自己学习iOS时的一些非常简单小例子，小项目，或者我个人博客&lt;a href=&quot;http://andyron.com&quot;&gt;AndyRon’s Blog&lt;/a&gt;文章的代码集合。没有按照什么路线学习，就是学到什么就是什么了，看上去特别乱，我自己有时候也非常懵逼，然后看到道长前辈的项目&lt;a href=&quot;https://github.com/soapyigu/Swift-30-Projects&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift-30-Projects&lt;/a&gt;，就整理、筛选一下，这样看着清晰一点，找起来也方便。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;语言方面大部分是Swift，个别项目是OC。&lt;/li&gt;
&lt;li&gt;以数字为目录只是为了记录项目数和排序，没有特殊意义。&lt;/li&gt;
&lt;li&gt;下载单个项目可以参考 &lt;a href=&quot;http://andyron.com/2017/downgit&quot;&gt;DownGit：怎么下载github中某个文件夹？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;总览图&quot;&gt;&lt;a href=&quot;#总览图&quot; class=&quot;headerlink&quot; title=&quot;总览图&quot;&gt;&lt;/a&gt;总览图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-6096bbe5db0ecced.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发关于沙盒</title>
    <link href="http://andyron.com/2018/ios-sandbox.html"/>
    <id>http://andyron.com/2018/ios-sandbox.html</id>
    <published>2018-06-04T02:43:26.000Z</published>
    <updated>2018-08-16T02:47:18.729Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;每个iOS程序都有一个独立的文件系统（存储空间），而且只能在对应的文件系统中进行操作，此区域被称为&lt;strong&gt;沙盒&lt;/strong&gt;。应用必须待在自己的沙盒里，其他应用不能访问该沙盒。所有的非代码文件都要保存在此，例如属性文件plist、文本文件、图像、图标、媒体资源等。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-8df56f866dd8c620.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;iOS app 沙盒目录结构&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="sandbox" scheme="http://andyron.com/tags/sandbox/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发：学习Runtime</title>
    <link href="http://andyron.com/2018/ios-runtime-begin.html"/>
    <id>http://andyron.com/2018/ios-runtime-begin.html</id>
    <published>2018-05-31T16:00:00.000Z</published>
    <updated>2018-08-16T02:42:47.196Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;学习iOS开发，runtime这个知识点是绕不过去的，但对于我这种学习OC不是太久，写OC的量不够多的人来说，抽象理解runtime的概念或者是看源代码有点枯燥，效果也不好，以例子的方法学习可能会更好，随着代码量的上升，对runtime的理解会越来越深入。&lt;br&gt;详细代码&lt;a href=&quot;https://github.com/andyRon/ARRuntimeDemo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ARRuntimeDemo&lt;/a&gt;,开发环境Xcode9.4&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="runtime" scheme="http://andyron.com/tags/runtime/"/>
    
  </entry>
  
  <entry>
    <title>iOS核心动画小结(swift)</title>
    <link href="http://andyron.com/2018/ios-coreanimation-swift.html"/>
    <id>http://andyron.com/2018/ios-coreanimation-swift.html</id>
    <published>2018-05-29T07:36:52.000Z</published>
    <updated>2018-05-29T08:06:18.000Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文所有示例代码都是Swift4，参看文末链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Core Animation是IOS和OS X平台上负责图形渲染与动画的基础框架。Core Animation可以作用与动画视图或者其他可视元素，为你完成了动画所需的大部分绘画工作。你只需要配置少量的动画参数（如开始点的位置和结束点的位置）即可使用Core Animation的动画效果。Core Animation将大部分实际的绘图任务交给了图形硬件来处理，图形硬件会加速图形渲染的速度。这种自动化的图形加速技术让动画拥有更高的帧率并且显示效果更加平滑，不会加重CPU的负担而影响程序的运行速度。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-16f8312b54e20cc1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Core Animation常用类继承关系&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>Masonry学习</title>
    <link href="http://andyron.com/2018/masonry-begin.html"/>
    <id>http://andyron.com/2018/masonry-begin.html</id>
    <published>2018-05-28T16:00:00.000Z</published>
    <updated>2018-08-16T02:38:55.575Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Masonry是一个轻量级的OC布局框架， 拥有自己的描述语法，采用更优雅的链式语法封装自动布局，简洁明了，并具有高可读性，而且同时支持 iOS 和 Max OS X。&lt;/p&gt;
&lt;p&gt;Masonry支持的属性与NSLayoutAttrubute的对照：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MASConstraint (Masonry)&lt;/th&gt;
&lt;th&gt;NSAutoLayout&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;left&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeLeft&lt;/td&gt;
&lt;td&gt;左侧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;top&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeTop&lt;/td&gt;
&lt;td&gt;上侧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;right&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeRight&lt;/td&gt;
&lt;td&gt;右侧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bottom&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeBottom&lt;/td&gt;
&lt;td&gt;下侧&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;leading&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeLeading&lt;/td&gt;
&lt;td&gt;首部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;trailing&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeTrailing&lt;/td&gt;
&lt;td&gt;尾部&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;width&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeWidth&lt;/td&gt;
&lt;td&gt;宽&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;height&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeHeight&lt;/td&gt;
&lt;td&gt;高&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;centerX&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeCenterX&lt;/td&gt;
&lt;td&gt;横向中点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;centerY&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeCenterY&lt;/td&gt;
&lt;td&gt;纵向中点&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;baseline&lt;/td&gt;
&lt;td&gt;NSLayoutAttributeBaseline&lt;/td&gt;
&lt;td&gt;文本基线&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中leading与left, trailing与right 在正常情况下是等价的。但是当一些布局是从右至左时(比如阿拉伯文) 则会对调， 换句话说就是基本可以 用left和right就好了。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="Masonry" scheme="http://andyron.com/tags/Masonry/"/>
    
      <category term="布局" scheme="http://andyron.com/tags/%E5%B8%83%E5%B1%80/"/>
    
  </entry>
  
  <entry>
    <title>向CocoaPods发布代码</title>
    <link href="http://andyron.com/2017/ios-cocoapods-push.html"/>
    <id>http://andyron.com/2017/ios-cocoapods-push.html</id>
    <published>2017-10-08T05:53:50.000Z</published>
    <updated>2017-10-08T06:23:51.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1678135-cdcea9c27584ae4e.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://cocoapods.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cocoapods&lt;/a&gt;是非常好用的一个iOS依赖管理工具，用它来管理和更新项目中的第三库使iOS开发更加方便。&lt;br&gt;使用别人优秀的代码在程序员开发过程中是非常常见的事，为别人贡献代码也是很有必要的事。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="CocoaPods" scheme="http://andyron.com/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>关于iOS开发中的pch文件</title>
    <link href="http://andyron.com/2017/ios-pch.html"/>
    <id>http://andyron.com/2017/ios-pch.html</id>
    <published>2017-09-26T14:11:06.000Z</published>
    <updated>2017-10-08T06:25:07.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;.pch&lt;/code&gt;文件也是一种头文件，它的内容能被项目中的其他所有源文件共享和访问。是一个预编译文件。&lt;/p&gt;
&lt;h3 id=&quot;pch文件的作用：&quot;&gt;&lt;a href=&quot;#pch文件的作用：&quot; class=&quot;headerlink&quot; title=&quot;pch文件的作用：&quot;&gt;&lt;/a&gt;pch文件的作用：&lt;/h3&gt;&lt;p&gt;1.存放一些全局的宏(整个项目中都用得上的宏)&lt;/p&gt;
&lt;p&gt;2.用来包含一些头文件(整个项目中都用得上的头文件)&lt;/p&gt;
&lt;p&gt;3.能自动打开或者关闭日志输出功能&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="pch" scheme="http://andyron.com/tags/pch/"/>
    
  </entry>
  
  <entry>
    <title>iOS沙盒和文件管理</title>
    <link href="http://andyron.com/2017/ios-sandbox-file.html"/>
    <id>http://andyron.com/2017/ios-sandbox-file.html</id>
    <published>2017-09-24T16:00:00.000Z</published>
    <updated>2017-10-08T06:25:33.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1678135-423ab6158c3ad6b2.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;沙盒&lt;/strong&gt;（sandbox）：iOS系统为每个应用程序创建自己的目录，每个应用程序只能访问自己的目录。&lt;br&gt;所有的非代码文件都要保存在此，例如图像，图标，声音，映像，属性列表，文本文件等。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="sandbox" scheme="http://andyron.com/tags/sandbox/"/>
    
  </entry>
  
  <entry>
    <title>iOS网络编程(六)：SDWebImage的简单使用</title>
    <link href="http://andyron.com/2017/ios-network-6.html"/>
    <id>http://andyron.com/2017/ios-network-6.html</id>
    <published>2017-09-23T12:15:48.000Z</published>
    <updated>2017-10-08T06:25:40.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://upload-images.jianshu.io/upload_images/1678135-27a4683256504565.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SDWebImage&lt;/strong&gt;一些知识：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对远程图片进行缓存管理（磁盘+内存）&lt;/li&gt;
&lt;li&gt;异步加载&lt;/li&gt;
&lt;li&gt;同一个URL图片不会重复下载&lt;/li&gt;
&lt;li&gt;失效的URL不会被无限重试&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="SDWebImage" scheme="http://andyron.com/tags/SDWebImage/"/>
    
  </entry>
  
  <entry>
    <title>iOS网络编程(五)：Cookie的使用</title>
    <link href="http://andyron.com/2017/ios-network-5.html"/>
    <id>http://andyron.com/2017/ios-network-5.html</id>
    <published>2017-09-22T16:00:00.000Z</published>
    <updated>2017-10-08T06:25:48.000Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Cookie在Web开发时是非常常用的客户端（浏览器）保存少量信息一种方法。&lt;br&gt;Cookie是网站为了便是终端身份，保存在终端本地的用户凭证信息。Cookie中的字段与意义由服务端进行定义。例如，当用户在某个网站进行了登录操作后，服务端会将Cookie信息返回给终端，终端会将这些信息进行保存，在下一次再次访问这个网站时，终端会将保存的Cookie信息一并发送到服务端，服务端根据Cookie信息是否有效来判断此用户是否可以自动登录。&lt;/p&gt;
&lt;p&gt;在iOS同样也有Cookie，Cookie管理的有两个类：&lt;code&gt;NSHTTPCookieStorage&lt;/code&gt; 和 &lt;code&gt;NSHTTPCookie&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
      <category term="NSHTTPCookieStorage" scheme="http://andyron.com/tags/NSHTTPCookieStorage/"/>
    
  </entry>
  
</feed>
