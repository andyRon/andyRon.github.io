<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欣欣向戎</title>
  
  <subtitle>AndyRon&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://andyron.com/"/>
  <updated>2018-09-18T18:22:08.967Z</updated>
  <id>http://andyron.com/</id>
  
  <author>
    <name>AndyRon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【译】Swift算法俱乐部-线性搜索</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E7%BA%BF%E6%80%A7%E6%90%9C%E7%B4%A2.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-线性搜索.html</id>
    <published>2018-09-18T18:20:00.000Z</published>
    <updated>2018-09-18T18:22:08.967Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Linear%20Search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swift-algorithm-club-cn/Linear Search&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-6fb15436aa3d81c1.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;Linear Search&quot;&gt;&lt;/p&gt;
&lt;p&gt;目标：在数组中查找特定值。&lt;/p&gt;
&lt;p&gt;我们有一组通用对象。 通过线性搜索，我们迭代数组中的所有对象，并将每个对象与我们正在寻找的对象进行比较。 如果两个对象相等，我们停止并返回当前对象在数组中的索引。 如果不相等，只要数组中还有对象，我们就会继续寻找下一个。&lt;/p&gt;
&lt;h2 id=&quot;一个例子&quot;&gt;&lt;a href=&quot;#一个例子&quot; class=&quot;headerlink&quot; title=&quot;一个例子&quot;&gt;&lt;/a&gt;一个例子&lt;/h2&gt;&lt;p&gt;假设我们有一个数组&lt;code&gt;[5,2,4,7]&lt;/code&gt;，我们想检查数组是否包含数字&lt;code&gt;2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;我们首先将数组中的第一个数字&lt;code&gt;5&lt;/code&gt;与我们正在寻找的数字&lt;code&gt;2&lt;/code&gt;进行比较。 它们显然不一样，所以我们继续比较下一个数组元素。&lt;/p&gt;
&lt;p&gt;我们将数组中的数字&lt;code&gt;2&lt;/code&gt;与数字&lt;code&gt;2&lt;/code&gt;进行比较，注意到它们是相等的。 现在我们可以停止迭代并返回1，这是数组中数字&lt;code&gt;2&lt;/code&gt;的索引。&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="线性搜索" scheme="http://andyron.com/tags/%E7%BA%BF%E6%80%A7%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-二分搜索</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-二分搜索.html</id>
    <published>2018-09-18T17:22:00.000Z</published>
    <updated>2018-09-18T17:31:41.887Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Binary%20Search&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swift-algorithm-club-cn/Binary Search&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-ce8f3414be0fbe16.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;Binary Search&quot;&gt;&lt;/p&gt;
&lt;p&gt;目标：在数组中快速寻找一个元素。&lt;/p&gt;
&lt;p&gt;假设你有一个数字数组，你想确定一个特定的数字是否在该数组中，如果在，那么获得这个数字的索引。&lt;/p&gt;
&lt;p&gt;对于上面的情况，Swift的&lt;code&gt;indexOf()&lt;/code&gt;函数足够完成：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; numbers = [&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;59&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;53&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;19&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;47&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;37&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;43&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;41&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;numbers.indexOf(&lt;span class=&quot;number&quot;&gt;43&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;// returns 15&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;内置的&lt;code&gt;indexOf()&lt;/code&gt;函数执行的是&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Linear%20Search/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;线性搜索&lt;/a&gt;。代码大概是：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;linearSearch&lt;/span&gt;&amp;lt;T: Equatable&amp;gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; a: [T], &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; key: T)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;? &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; ..&amp;lt; a.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a[i] == key &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; i&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="二分搜索" scheme="http://andyron.com/tags/%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-插入排序</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-插入排序.html</id>
    <published>2018-09-16T16:00:00.000Z</published>
    <updated>2018-09-17T04:40:58.552Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Insertion%20Sort&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swift-algorithm-club-cn/Insertion Sort&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-356b8d2db83067f0.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;插入排序动画&quot;&gt;&lt;/p&gt;
&lt;p&gt;目标：把数组从低到高（或从高到低）排序&lt;/p&gt;
&lt;p&gt;您将获得按正确的顺序排列一系列数字。插入排序算法的工作原理如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把一系列数字放在一个未排序的堆里。&lt;/li&gt;
&lt;li&gt;从堆中挑选一个数字。 你选择哪一个并不重要，但从堆顶挑选是最容易。&lt;/li&gt;
&lt;li&gt;把这个数插入一个新的数组。&lt;/li&gt;
&lt;li&gt;从未排序堆中再选择一个数字，并将其插入之前的数组中。 这个数字在第一个数字之前或之后，所以现在这两个数字被排序。&lt;/li&gt;
&lt;li&gt;再从堆中选择一个数字，并将其插入到数组中的正确排序位置。&lt;/li&gt;
&lt;li&gt;继续这样做，直到堆里没有数字。 最终得到一个空堆和一个排序的数组。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这就是为什么这被称为“插入”排序，因为你从堆中取一个数字并将其插入数组中的正确排序位置。&lt;/p&gt;
&lt;h2 id=&quot;例子&quot;&gt;&lt;a href=&quot;#例子&quot; class=&quot;headerlink&quot; title=&quot;例子&quot;&gt;&lt;/a&gt;例子&lt;/h2&gt;&lt;p&gt;假设这边有需要排序的一些数字  &lt;code&gt;[ 8, 3, 5, 4, 6 ]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;选择第一个数字&lt;code&gt;8&lt;/code&gt;，然后将其插入新数组中。 新数组是空的，所以插入很容易。 排序的数组现在是&lt;code&gt;[8]&lt;/code&gt;，堆是&lt;code&gt;[3,5,4,6]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;从堆中选择下一个数字&lt;code&gt;3&lt;/code&gt;，然后将其插入到已排序的数组中。 &lt;code&gt;3&lt;/code&gt;应该在&lt;code&gt;8&lt;/code&gt;之前，所以排序的数组现在是&lt;code&gt;[3,8]&lt;/code&gt;，而堆被缩减为&lt;code&gt;[5,4,6]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;从堆中选择下一个数字&lt;code&gt;5&lt;/code&gt;，然后将其插入到已排序的数组中。 &lt;code&gt;5&lt;/code&gt;介于&lt;code&gt;3&lt;/code&gt;和&lt;code&gt;8&lt;/code&gt;之间。 排序的数组是&lt;code&gt;[3,5,8]&lt;/code&gt;，堆是&lt;code&gt;[4,6]&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;重复上面的过程直到堆为空。&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="插入排序" scheme="http://andyron.com/tags/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-队列</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E9%98%9F%E5%88%97.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-队列.html</id>
    <published>2018-09-16T10:41:55.000Z</published>
    <updated>2018-09-16T11:26:50.193Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Queue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swift-algorithm-club-cn/Queue&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;队列&quot;&gt;&lt;a href=&quot;#队列&quot; class=&quot;headerlink&quot; title=&quot;队列&quot;&gt;&lt;/a&gt;队列&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;这个话题已经有个辅导&lt;a href=&quot;https://www.raywenderlich.com/148141/swift-algorithm-club-swift-queue-data-structure&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;队列的本质是一个数组，但只能从队尾添加元素，从队首移除元素。这保证了第一个入队的元素总是第一个出队。先到先得！&lt;/p&gt;
&lt;p&gt;为什么要这样做呢？在很多算法的实现中，你可能需要将某些对象放到一个临时的列表中，之后再将其取出。通常加入和取出元素的顺序非常重要。&lt;/p&gt;
&lt;p&gt;队列可以保证元素存入和取出的顺序是先进先出(first-in first-out, FIFO)的，第一个入队的元素总是第一个出队，公平合理！&lt;br&gt;另外一个非常类似的数据结构是&lt;a href=&quot;../Stack/&quot;&gt;栈&lt;/a&gt;，它是一个后进先出(last-in, first-out, LIFO)的结构。&lt;/p&gt;
&lt;p&gt;举例来说，我们将一个数字入队：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;queue.enqueue(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;队列现在为 &lt;code&gt;[ 10 ]&lt;/code&gt;。再将下一个数字入队：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;queue.enqueue(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;队列现在为 &lt;code&gt;[ 10, 3 ]&lt;/code&gt;。再加入一个数字：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;queue.enqueue(&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;队列现在为 &lt;code&gt;[ 10, 3, 57 ]&lt;/code&gt;。现在我们将第一个元素出队：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;queue.dequeue()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-栈</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E6%A0%88.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-栈.html</id>
    <published>2018-09-15T16:00:00.000Z</published>
    <updated>2018-09-16T08:39:19.275Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Stack&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swift-algorithm-club-cn/Stack&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;这个话题已经有个辅导&lt;a href=&quot;https://www.raywenderlich.com/149213/swift-algorithm-club-swift-stack-data-structure&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;栈类似于数组，但是限制了存取操作的灵活性。栈只允许使用者从栈顶 &lt;strong&gt;压入(push)&lt;/strong&gt; 元素；从栈顶 &lt;strong&gt;弹出(pop)&lt;/strong&gt; 元素；&lt;strong&gt;取得(peek)&lt;/strong&gt; 栈顶元素，但不弹出。&lt;/p&gt;
&lt;p&gt;这样的限制有什么意义呢？在很多算法的实现中，你可能需要将某些对象放到一个临时的列表中，之后再将其取出。通常加入和取出元素的顺序非常重要。&lt;/p&gt;
&lt;p&gt;栈可以保证元素存入和取出的顺序是后进先出(last-in first-out, LIFO)的。栈中弹出的元素总是你最后放进去的那个。另外一个非常类似的数据结构是&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Queue&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;队列&lt;/a&gt;，它是一个先进先出(first-in, first-out, FIFO)的结构。&lt;/p&gt;
&lt;p&gt;举例来说，我们先将一个数字压入栈中：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;stack.push(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;栈现在是 &lt;code&gt;[10]&lt;/code&gt;。压入下一个数字：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;stack.push(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;栈现在是 &lt;code&gt;[10, 3]&lt;/code&gt;。再压入一个数字：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;stack.push(&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;栈现在是 &lt;code&gt;[10, 3, 57]&lt;/code&gt;。现在把栈顶的数字弹出来：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;stack.pop()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这行代码返回 &lt;code&gt;57&lt;/code&gt;，因为它是我们最后压入的元素。现在栈又变成了 &lt;code&gt;[10, 3]&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;stack.pop()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="栈" scheme="http://andyron.com/tags/%E6%A0%88/"/>
    
  </entry>
  
  <entry>
    <title>读《拖延心理学》</title>
    <link href="http://andyron.com/2018/%E6%8B%96%E5%BB%B6%E5%BF%83%E7%90%86%E5%AD%A6.html"/>
    <id>http://andyron.com/2018/拖延心理学.html</id>
    <published>2018-09-14T16:00:00.000Z</published>
    <updated>2018-09-16T09:18:17.016Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;初次阅读时间：2016.7&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-590de9597eefbf80.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1 id=&quot;作者和本书概要&quot;&gt;&lt;a href=&quot;#作者和本书概要&quot; class=&quot;headerlink&quot; title=&quot;作者和本书概要&quot;&gt;&lt;/a&gt;作者和本书概要&lt;/h1&gt;&lt;p&gt;简·博克和莱诺拉·袁她们两人是心理学博士、美国加利福尼亚大学的资深心理咨询师。 从1979年开始就为学生中的拖延者创设了第一个团体治疗课程，曾经出现在《奥普拉》和《20/20》等电视节目中，同时也是《纽约时报》、《今日美国》、《洛杉矶时报》、《人物》和《当代心理学》等出版物的专访对象。 一直致力于为全美国的学生、公司组织和公众团体提供治疗的心理工作坊和专题演讲方面的服务，终年活跃在伯克利、斯坦福大学的讲坛。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/4180711/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《拖延心理学》&lt;/a&gt; ，副标题: 向与生俱来的行为顽症宣战，原作名: Procrastination: Why You Do It, What To Do About It Now。&lt;/p&gt;
&lt;p&gt;拖延是普遍存在的，从我阅读本书的过程中也能体会到。我们需要认识拖延，知道它背后原因，找到应对策略，然后完善自我。本书非常详细的分析了拖延的方方面面。&lt;/p&gt;
&lt;h1 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h1&gt;&lt;h2 id=&quot;序言&quot;&gt;&lt;a href=&quot;#序言&quot; class=&quot;headerlink&quot; title=&quot;序言&quot;&gt;&lt;/a&gt;序言&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;拖延从根本上来说并不是一个时间管理方面的问题，也不是一个道德问题，而是一个&lt;strong&gt;复杂的心理问题&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;拖延的问题是一个人跟自身如何相处的问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;很多时候对一些事情弃之不理反而对你最为有利&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;当我们按照自己真实的样子而不是按照自己希望的样子来接受自己的时候，我们才能以最有利于我们的方式来采取行动，而不是生活在拖延的无边阴影之下。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="拖延" scheme="http://andyron.com/tags/%E6%8B%96%E5%BB%B6/"/>
    
      <category term="心理学" scheme="http://andyron.com/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-算法设计技巧</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E7%AE%97%E6%B3%95%E8%AE%BE%E8%AE%A1%E6%8A%80%E5%B7%A7.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-算法设计技巧.html</id>
    <published>2018-09-14T11:41:55.000Z</published>
    <updated>2018-09-14T12:07:11.468Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当你遇到新问题的时候，需要寻找新的算法。&lt;/p&gt;
&lt;h3 id=&quot;是否有类似的其它问题？&quot;&gt;&lt;a href=&quot;#是否有类似的其它问题？&quot; class=&quot;headerlink&quot; title=&quot;是否有类似的其它问题？&quot;&gt;&lt;/a&gt;是否有类似的其它问题？&lt;/h3&gt;&lt;p&gt;如果您可以根据另一个更普遍的问题来构建解决你目前需要解决问题，那么您可以使用现有算法。 为什么重新发明轮子？&lt;/p&gt;
&lt;p&gt;我喜欢Steven Skiena的&lt;a href=&quot;http://www.algorist.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;算法设计手册&lt;/a&gt;，它包含了一系列可以尝试的问题和解决方案。(另见Steven Skiena的&lt;a href=&quot;http://www3.cs.stonybrook.edu/~algorith/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;算法库&lt;/a&gt;)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注：豆瓣 &lt;a href=&quot;https://book.douban.com/subject/4048566/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;算法设计手册&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-大O表示法</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E5%A4%A7O%E8%A1%A8%E7%A4%BA%E6%B3%95.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-大O表示法.html</id>
    <published>2018-09-14T10:09:21.000Z</published>
    <updated>2018-09-17T04:51:58.461Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-514c3ef55574c28b.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;知道某个算法的运行速度和占用的内存空间，对于选择正确的算法来解决问题非常有帮助。&lt;/p&gt;
&lt;p&gt;大O表示法 能让你对一个算法的运行时间和占用内存有个大概概念。当有人说，“这个算法在最糟情况下的运行时间是 &lt;strong&gt;O(n^2)&lt;/strong&gt;，而且占用了 &lt;strong&gt;O(n)&lt;/strong&gt; 大小的空间”时，他的意思是这个算法有点慢，不过没占多大内存。&lt;/p&gt;
&lt;p&gt;要知道一个算法的大O 表示法通常要通过数学分析。在这里我们不会涉及具体的数学，不过知道不同的值意味着什么会很有用。所以这里有一张方便的表。&lt;strong&gt;n&lt;/strong&gt; 在这里代表的意思是数据的个数。举个例子，当对一个有 100 个元素的数组进行排序时，&lt;strong&gt;n = 100&lt;/strong&gt;。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Big-O表示符号&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;名字&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(1)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;常数级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;最好的&lt;/strong&gt;。不论输入数据量有多大，这个算法的运行时间总是一样的。例子: 基于索引取出数组中对应的元素。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(log n)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;对数级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;相当好&lt;/strong&gt;。这种算法每次循环时会把需要处理的数据量减半。如果你有 100 个元素，则只需要七步就可以找到答案。1000 个元素只要十步。100,0000 元素只要二十步。即便数据量很大这种算法也非常快。例子：二分查找。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(n)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;线性级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;还不错&lt;/strong&gt;。如果你有 100 个元素，这种算法就要做 100 次工作。数据量翻倍那么运行时间也翻倍。例子：线性查找。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(n log n)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;线性对数级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;还可以&lt;/strong&gt;。比线性级差了一些，不过也没那么差劲。例子：最快的通用排序算法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(n^2)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;二次方级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;有点慢&lt;/strong&gt;。如果你有 100 个元素，这种算法需要做 100^2 = 10000 次工作。数据量 x 2 会导致运行时间 x 4 (因为 2 的 2 次方等于 4)。例子：循环套循环的算法，比如插入排序。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(n^3)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;三次方级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;特别慢&lt;/strong&gt;。如果你有 100 个元素，那么这种算法就要做 100^3 = 100,0000 次工作。数据量 x 2 会导致运行时间 x 8。例子：矩阵乘法。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(2^n)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;指数级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;超级慢&lt;/strong&gt;。这种算法你要想方设法避免，但有时候你就是没得选。加一点点数据就会把运行时间成倍的加长。例子：旅行商问题。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;&lt;strong&gt;O(n!)&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;阶乘级&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;比蜗牛还慢&lt;/strong&gt;！不管干什么都要跑个 N 年才能得到结果。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="Big-O" scheme="http://andyron.com/tags/Big-O/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-为什么要学习算法与数据结构？</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9F.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-为什么要学习算法与数据结构？.html</id>
    <published>2018-09-14T10:09:01.000Z</published>
    <updated>2018-09-14T12:06:49.014Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你已经写过一些代码，你也许就会好奇学习算法和数据结构的意义何在，特别是如果你没有接受过计算机科学专业的高等教育。&lt;/p&gt;
&lt;p&gt;毕竟，在平时的编码工作中，到底会有多少机会需要自己亲自编写一个链表或排序算法呢？答案是：可能永远都不会。&lt;/p&gt;
&lt;h4 id=&quot;然而…&quot;&gt;&lt;a href=&quot;#然而…&quot; class=&quot;headerlink&quot; title=&quot;然而…&quot;&gt;&lt;/a&gt;&lt;strong&gt;然而…&lt;/strong&gt;&lt;/h4&gt;&lt;p&gt;了解一点现有算法解决问题时所用的奇技淫巧可能会给予你启发，让你能更好地优化自己的代码。&lt;/p&gt;
&lt;p&gt;除了自带的标准数组和字典之外，了解一些其它的数据结构让你在构建自己的 App 时拥有更多的选择。&lt;/p&gt;
&lt;p&gt;学习算法和数据结构会助你成为更好的开发者！（当然也就意味了可以赚到更多的$$$）&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-什么是算法和数据结构？</title>
    <link href="http://andyron.com/2018/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E4%BB%80%E4%B9%88%E6%98%AF%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%EF%BC%9F.html"/>
    <id>http://andyron.com/2018/Swift算法俱乐部-什么是算法和数据结构？.html</id>
    <published>2018-09-14T10:08:23.000Z</published>
    <updated>2018-09-14T12:07:02.125Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。欢迎有兴趣学习算法和数据结构，有时间的小伙伴一起参与翻译，欢迎issue，或者直接提交pull request。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;什么是算法和数据结构？&quot;&gt;&lt;a href=&quot;#什么是算法和数据结构？&quot; class=&quot;headerlink&quot; title=&quot;什么是算法和数据结构？&quot;&gt;&lt;/a&gt;什么是算法和数据结构？&lt;/h1&gt;&lt;p&gt;一个算法就像一张教计算机“烹饪”的“食谱”。如果你了解做菜的过程，你就能理解算法的定义。&lt;/p&gt;
&lt;p&gt;下面有一张关于&lt;a href=&quot;http://allrecipes.com/recipe/21014/good-old-fashioned-pancakes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;制作薄饼的食谱&lt;/a&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在一个大碗里，将面粉，发酵粉，盐和糖过筛。&lt;/li&gt;
&lt;li&gt;加入牛奶、鸡蛋和融化了的奶油。&lt;/li&gt;
&lt;li&gt;搅拌混合直至丝柔顺滑。&lt;/li&gt;
&lt;li&gt;中火加热平底锅。&lt;/li&gt;
&lt;li&gt;将搅拌好的面糊缓慢倒入锅中，每个薄饼大概用1/4杯的面糊即可。&lt;/li&gt;
&lt;li&gt;薄饼两面都呈黄褐色即可出锅享用了。&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>关于字符编码</title>
    <link href="http://andyron.com/2018/ascii-unicode-utf8.html"/>
    <id>http://andyron.com/2018/ascii-unicode-utf8.html</id>
    <published>2018-09-14T05:38:37.000Z</published>
    <updated>2018-09-16T09:16:43.910Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/1678135-5a5b48c70bb23657.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;ASCII码表&quot;&gt;&lt;/p&gt;
&lt;p&gt;作为一名程序员，对编码问题有必要了解一下。计算机是以二进制形式存储数据的，至于为什么选择二进制，这可能就需要从计算机的诞生历史说起了，这不是现在关注的点。&lt;/p&gt;
    
    </summary>
    
      <category term="暂时没想到怎么分类" scheme="http://andyron.com/categories/%E6%9A%82%E6%97%B6%E6%B2%A1%E6%83%B3%E5%88%B0%E6%80%8E%E4%B9%88%E5%88%86%E7%B1%BB/"/>
    
    
      <category term="ASCII" scheme="http://andyron.com/tags/ASCII/"/>
    
      <category term="Unicode" scheme="http://andyron.com/tags/Unicode/"/>
    
      <category term="UTF8" scheme="http://andyron.com/tags/UTF8/"/>
    
  </entry>
  
  <entry>
    <title>读《畅销的原理》——作为消费者，我不想被商家牵着鼻子走</title>
    <link href="http://andyron.com/2018/%E3%80%8A%E7%95%85%E9%94%80%E7%9A%84%E5%8E%9F%E7%90%86%E3%80%8B.html"/>
    <id>http://andyron.com/2018/《畅销的原理》.html</id>
    <published>2018-09-11T16:00:00.000Z</published>
    <updated>2018-09-13T03:04:38.556Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/0069RVTdgy1fv6ihcitf9j30i20p50ub.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;作者和本书概要&quot;&gt;&lt;a href=&quot;#作者和本书概要&quot; class=&quot;headerlink&quot; title=&quot;作者和本书概要&quot;&gt;&lt;/a&gt;作者和本书概要&lt;/h2&gt;&lt;p&gt;马修·威尔科克斯（Matthew Willcox），博达大桥广告公司（FCB）决策制定研究所的创立者和执行常委。博达大桥广告公司（FCB）是世界最早的广告公司之一，也是全球最早上市的广告公司之一。马修在品牌战略领域已经有25年的从业经历，足迹遍布欧洲、亚洲和北美洲。他服务过李维斯、美国艺电、希尔顿酒店集团、联合利华、雀巢、壳牌和葛兰素史克等大企业。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/26919762/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《畅销的原理》&lt;/a&gt;，作者在书里总结了自己25年的广告和营销从业经验，以及半个世纪以来人类行为和神经科学的研究成果，揭秘营销的本质以及如何刺激大脑做出决策。&lt;br&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="心理学" scheme="http://andyron.com/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
      <category term="营销" scheme="http://andyron.com/tags/%E8%90%A5%E9%94%80/"/>
    
  </entry>
  
  <entry>
    <title>图解TCP/IP-5-iP协议相关技术</title>
    <link href="http://andyron.com/2018/tujie-TCP-IP-5.html"/>
    <id>http://andyron.com/2018/tujie-TCP-IP-5.html</id>
    <published>2018-09-10T16:00:00.000Z</published>
    <updated>2018-09-13T03:05:16.643Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;仅凭IP无法完成通信&lt;/p&gt;
&lt;h3 id=&quot;1-DNS&quot;&gt;&lt;a href=&quot;#1-DNS&quot; class=&quot;headerlink&quot; title=&quot;1 DNS&quot;&gt;&lt;/a&gt;1 DNS&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/0069RVTdgy1fv5v1beh9jj30uw0ledhp.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/0069RVTdgy1fv5v1n71qgj30qu0padh5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="图解TCP/IP" scheme="http://andyron.com/categories/%E5%9B%BE%E8%A7%A3TCP-IP/"/>
    
    
  </entry>
  
  <entry>
    <title>读《设计心理学1》——好的设计是有章可循的</title>
    <link href="http://andyron.com/2018/%E8%AE%BE%E8%AE%A1%E5%BF%83%E7%90%86%E5%AD%A61.html"/>
    <id>http://andyron.com/2018/设计心理学1.html</id>
    <published>2018-09-09T16:00:00.000Z</published>
    <updated>2018-09-13T03:04:23.227Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/0069RVTdgy1fv4klu1l60j30u01740x3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;作者和本书概要&quot;&gt;&lt;a href=&quot;#作者和本书概要&quot; class=&quot;headerlink&quot; title=&quot;作者和本书概要&quot;&gt;&lt;/a&gt;作者和本书概要&lt;/h2&gt;&lt;p&gt;唐纳德·诺曼(Donald Arthur Norman)，曾被美国《商业周刊》评为全球影响力设计师之一。美国认知心理学家、计算机工程师、工业设计家，认知科学学会的发起人之一。现为美国西北大学计算机科学系和心理学教授，是尼而森-诺曼集团(Nielsen Norman Group)咨询公司的创办人之一，苹果计算机公司先进技术部副总裁。1999年，Upside杂志提名诺曼博士为世界100精英之一。2002年，诺曼获得了由人机交互专家协会(SIGCHI)授予的终身成就奖。作为一个以人为中心的设计的倡导者，诺曼最著名的书就是《设计心理学》。   &lt;/p&gt;
&lt;p&gt;《设计心理学》最早出版于1988年，是设计学的经典入门书籍。2013左右，作者对这套书大幅度增加和完善，现在&lt;a href=&quot;https://book.douban.com/subject/26742341/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《设计心理学》&lt;/a&gt; 有四本书： &lt;/p&gt;
&lt;p&gt;《设计心理学1：日常的设计》&lt;/p&gt;
&lt;p&gt;《设计心理学2：与复杂共处》&lt;/p&gt;
&lt;p&gt;《设计心理学3：情感化设计》&lt;/p&gt;
&lt;p&gt;《设计心理学4：未来设计》&lt;/p&gt;
&lt;p&gt;本文是对《设计心理学1：日常的设计》的读书笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="心理学" scheme="http://andyron.com/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"/>
    
      <category term="设计" scheme="http://andyron.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>读《赤裸裸的统计学》——面对爆炸的数据，了解统计学是很有必要的</title>
    <link href="http://andyron.com/2018/%E8%B5%A4%E8%A3%B8%E8%A3%B8%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6.html"/>
    <id>http://andyron.com/2018/赤裸裸的统计学.html</id>
    <published>2018-09-08T16:00:00.000Z</published>
    <updated>2018-09-11T12:31:56.553Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://ws1.sinaimg.cn/large/0069RVTdgy1fv4acr7jihj308w0c9glt.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;作者和本书概要&quot;&gt;&lt;a href=&quot;#作者和本书概要&quot; class=&quot;headerlink&quot; title=&quot;作者和本书概要&quot;&gt;&lt;/a&gt;作者和本书概要&lt;/h2&gt;&lt;p&gt;查尔斯•惠伦（Charles Wheelan），于1997～2002年间担任《经济学人》杂志驻美国中西部地区的记者，还为《芝加哥部报》、《纽约时报》和《华尔街日报》撰稿，所著《赤裸裸的经济学》是畅销多年的经济学普及读物。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://book.douban.com/subject/25717380/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《赤裸裸的统计学》&lt;/a&gt;是一本关于统计学常识的科普书。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/0069RVTdgy1fv4m5qldl4j30rm0drwgh.jpg&quot; alt=&quot;《赤裸裸的统计学》思维导图&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;内容&quot;&gt;&lt;a href=&quot;#内容&quot; class=&quot;headerlink&quot; title=&quot;内容&quot;&gt;&lt;/a&gt;内容&lt;/h2&gt;&lt;p&gt;作为大数据时代炙手可热的学问，统计学可以解决很多实际问题。可如果运用不当，统计学也会制造假象、造成误导。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;了解统计学，了解在大数据时代生存的游戏法则。&lt;/strong&gt; 运用好统计学知识，能让我们在面对陌生问题的时候，得出有说服力的结论，做出合理的决策。&lt;br&gt;统计学家的工作：通过分析数据来推断事物的本质，预测它未来的发展。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="统计学" scheme="http://andyron.com/tags/%E7%BB%9F%E8%AE%A1%E5%AD%A6/"/>
    
      <category term="大数据" scheme="http://andyron.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
      <category term="大数定律" scheme="http://andyron.com/tags/%E5%A4%A7%E6%95%B0%E5%AE%9A%E5%BE%8B/"/>
    
      <category term="期望值" scheme="http://andyron.com/tags/%E6%9C%9F%E6%9C%9B%E5%80%BC/"/>
    
      <category term="随机抽样" scheme="http://andyron.com/tags/%E9%9A%8F%E6%9C%BA%E6%8A%BD%E6%A0%B7/"/>
    
      <category term="中心极限定理" scheme="http://andyron.com/tags/%E4%B8%AD%E5%BF%83%E6%9E%81%E9%99%90%E5%AE%9A%E7%90%86/"/>
    
      <category term="回归分析" scheme="http://andyron.com/tags/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>图解TCP/IP-4-IP协议</title>
    <link href="http://andyron.com/2018/tujie-TCP-IP-4.html"/>
    <id>http://andyron.com/2018/tujie-TCP-IP-4.html</id>
    <published>2018-09-05T16:00:00.000Z</published>
    <updated>2018-09-13T03:05:10.070Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;TCP/IP的心脏是互联网层，包括IP(Internet Protocol)和ICMP(Internet Control Message Protocol)两个协议。&lt;/p&gt;
&lt;h3 id=&quot;1IP即网际协议&quot;&gt;&lt;a href=&quot;#1IP即网际协议&quot; class=&quot;headerlink&quot; title=&quot;1IP即网际协议&quot;&gt;&lt;/a&gt;1IP即网际协议&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://ws4.sinaimg.cn/large/006tNbRwgy1fuzz5b87o4j30w80c83za.jpg&quot; alt=&quot;&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主机&lt;/strong&gt;：配置IP地址，但不进行路由控制的设备。&lt;br&gt;&lt;strong&gt;路由器&lt;/strong&gt;：配置IP地址又有路由控制的设备。&lt;br&gt;&lt;strong&gt;节点&lt;/strong&gt;：主机和路由器的统称。&lt;/p&gt;
    
    </summary>
    
      <category term="图解TCP/IP" scheme="http://andyron.com/categories/%E5%9B%BE%E8%A7%A3TCP-IP/"/>
    
    
  </entry>
  
  <entry>
    <title>图解TCP/IP-3-数据链路</title>
    <link href="http://andyron.com/2018/tujie-TCP-IP-3.html"/>
    <id>http://andyron.com/2018/tujie-TCP-IP-3.html</id>
    <published>2018-09-05T04:27:36.000Z</published>
    <updated>2018-09-05T02:58:09.079Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1数据链路的作用&quot;&gt;&lt;a href=&quot;#1数据链路的作用&quot; class=&quot;headerlink&quot; title=&quot;1数据链路的作用&quot;&gt;&lt;/a&gt;1数据链路的作用&lt;/h3&gt;&lt;p&gt;二进制0、1表示信息，在通信媒介中国对应是 电压的高低、光的闪灭以及电波的强弱等信号。  &lt;/p&gt;
&lt;p&gt;数据链路被视为网络传输中的最小单位。  &lt;/p&gt;
&lt;p&gt;不同的数据链路网路：&lt;br&gt;以太网&lt;br&gt;FDDI（Fiber Distributed Data Interface，光纤分布式数据接口）&lt;br&gt;ATM（Asynchronous Transfer Mode，异步传输方式）&lt;br&gt;无线LAN&lt;br&gt;蓝牙  &lt;/p&gt;
&lt;p&gt;网络拓扑（Topology）&lt;/p&gt;
&lt;h3 id=&quot;2数据链路相关技术&quot;&gt;&lt;a href=&quot;#2数据链路相关技术&quot; class=&quot;headerlink&quot; title=&quot;2数据链路相关技术&quot;&gt;&lt;/a&gt;2数据链路相关技术&lt;/h3&gt;&lt;h4 id=&quot;2-1MAC地址&quot;&gt;&lt;a href=&quot;#2-1MAC地址&quot; class=&quot;headerlink&quot; title=&quot;2.1MAC地址&quot;&gt;&lt;/a&gt;2.1MAC地址&lt;/h4&gt;&lt;p&gt;MAC地址长48比特，一般被烧入到ROM中。任意一个网卡的MAC地址是全世界唯一的（虚拟网卡除外）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNbRwgy1fuyg9h5k7vj30yi0lagn3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="图解TCP/IP" scheme="http://andyron.com/categories/%E5%9B%BE%E8%A7%A3TCP-IP/"/>
    
    
  </entry>
  
  <entry>
    <title>图解TCP/IP-2-TCP/IP基础知识</title>
    <link href="http://andyron.com/2018/tujie-TCP-IP-2.html"/>
    <id>http://andyron.com/2018/tujie-TCP-IP-2.html</id>
    <published>2018-09-04T04:27:36.000Z</published>
    <updated>2018-09-04T05:15:43.359Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1TCP-IP出现的背景及其历史&quot;&gt;&lt;a href=&quot;#1TCP-IP出现的背景及其历史&quot; class=&quot;headerlink&quot; title=&quot;1TCP/IP出现的背景及其历史&quot;&gt;&lt;/a&gt;1TCP/IP出现的背景及其历史&lt;/h3&gt;&lt;p&gt;军用技术&lt;br&gt;ARPANET  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws3.sinaimg.cn/large/0069RVTdgy1fuxe4g75qaj310w0goabv.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;UNIX系统的普及与互联网的扩张  &lt;/p&gt;
&lt;p&gt;商用互联网服务的启蒙     ISP&lt;/p&gt;
    
    </summary>
    
      <category term="图解TCP/IP" scheme="http://andyron.com/categories/%E5%9B%BE%E8%A7%A3TCP-IP/"/>
    
    
  </entry>
  
  <entry>
    <title>图解TCP/IP-1-网络基础知识</title>
    <link href="http://andyron.com/2018/tujie-TCP-IP-1.html"/>
    <id>http://andyron.com/2018/tujie-TCP-IP-1.html</id>
    <published>2018-09-03T04:27:36.000Z</published>
    <updated>2018-09-04T04:20:06.389Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;现在TCP/IP不局限于链接计算机，还可以链接汽车、数码相机、家电等，另外还应用在计算机系统虚拟化和云计算。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/006tNbRwgy1fuw97h2a4mj30v20nidh4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="图解TCP/IP" scheme="http://andyron.com/categories/%E5%9B%BE%E8%A7%A3TCP-IP/"/>
    
    
  </entry>
  
  <entry>
    <title>《我所理解的生活》记录</title>
    <link href="http://andyron.com/2018/%E6%88%91%E6%89%80%E7%90%86%E8%A7%A3%E7%9A%84%E7%94%9F%E6%B4%BB.html"/>
    <id>http://andyron.com/2018/我所理解的生活.html</id>
    <published>2018-08-31T15:41:30.000Z</published>
    <updated>2018-09-08T16:00:00.000Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;注：&lt;/code&gt; 本文是我几年前的记录，整理时发现还可以再看看。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/large/0069RVTdgy1futbbk56k0j31kw23vto3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;序&quot;&gt;&lt;a href=&quot;#序&quot; class=&quot;headerlink&quot; title=&quot;序&quot;&gt;&lt;/a&gt;序&lt;/h2&gt;&lt;p&gt;我所理解的生活就是除了造谣以外，去造其他一切东西。  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这世道让那些不说粗话但最缺德的人能做道德评判家，这世道让那些话不脏但心眼脏、手段脏的人当道。&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;我所理解的生活就是做着自己喜欢的事件，养活自己，养活家人。&lt;/p&gt;
&lt;p&gt;你在台面上看见我成功一次，我在台面下就干砸十次，那又如何，我又没死，不停地干就行了，人们只会记住你成功的那一次。&lt;/p&gt;
&lt;p&gt;我只负责制造作品，不负责用户体验，也没有售后服务，更不会根据大家的口味来改进。  &lt;/p&gt;
&lt;p&gt;充满挫败甚至后悔，但遗憾并不多。 &lt;/p&gt;
&lt;p&gt;得之我幸，不得我也没什么不幸。&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
