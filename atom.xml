<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欣欣向戎</title>
  
  <subtitle>AndyRon&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://andyron.com/"/>
  <updated>2019-09-09T10:05:39.077Z</updated>
  <id>http://andyron.com/</id>
  
  <author>
    <name>AndyRon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>《百年孤独》</title>
    <link href="http://andyron.com/2019/%E7%99%BE%E5%B9%B4%E5%AD%A4%E7%8B%AC.html"/>
    <id>http://andyron.com/2019/百年孤独.html</id>
    <published>2019-09-09T09:50:30.000Z</published>
    <updated>2019-09-09T10:05:39.077Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://images.andyron.com/2019/ar2019002.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;有句开玩笑的话，大概是这样说的：“经典就是买的人很多，读的人却很少的作品”，而《百年孤独》可能就是这样的经典作品，读完真的是&lt;strong&gt;史诗般的孤独体验，&lt;/strong&gt;可能我以后还会再去品味这部经典，但我确信近几年我不想，也不能再都去读了。🤦‍♀️&lt;/p&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://andyron.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-并查集</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E5%B9%B6%E6%9F%A5%E9%9B%86.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-并查集.html</id>
    <published>2019-09-05T01:24:00.000Z</published>
    <updated>2019-09-06T01:29:32.266Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Union-Find&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Union-Find&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;并查集(Union-Find)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;并查集是一种数据结构，可以跟踪一组元素，它们分布在几个不相交（非重叠）子集合中。 它也被称为不相交集数据结构。&lt;/p&gt;
&lt;p&gt;这是什么意思呢？ 例如，并查集数据结构可以跟踪以下集合：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[ a, b, f, k ]
[ e ]
[ g, d, c ]
[ i, j ]
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="并查集" scheme="http://andyron.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="Union-Find" scheme="http://andyron.com/tags/Union-Find/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-选取样本</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E9%80%89%E5%8F%96%E6%A0%B7%E6%9C%AC.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-选取样本.html</id>
    <published>2019-09-02T02:36:00.000Z</published>
    <updated>2019-09-02T02:39:18.065Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Selection%20Sampling&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Selection Sampling&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;选取样本（Selection Sampling）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目标：从&lt;em&gt;n&lt;/em&gt;个项的集合中随机选择&lt;em&gt;k&lt;/em&gt;个项。&lt;/p&gt;
&lt;p&gt;假设你有一副52张牌，你需要随机抽取10张牌。 这个算法可以让你达成。&lt;/p&gt;
&lt;p&gt;这是一个非常快的版本：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;select&lt;/span&gt;&amp;lt;T&amp;gt;&lt;span class=&quot;params&quot;&gt;(from a: [T], &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; k: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; [&lt;span class=&quot;type&quot;&gt;T&lt;/span&gt;] &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;k &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; r = random(&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;: i, &lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;: a.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i != r &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;swap&lt;/span&gt;(&amp;amp;a[i], &amp;amp;a[r])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Array&lt;/span&gt;(a[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;..&amp;lt;k])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="选取样本" scheme="http://andyron.com/tags/%E9%80%89%E5%8F%96%E6%A0%B7%E6%9C%AC/"/>
    
      <category term="Selection Sampling" scheme="http://andyron.com/tags/Selection-Sampling/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-第k大元素问题</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E7%AC%ACk%E5%A4%A7%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-第k大元素问题.html</id>
    <published>2019-09-01T09:38:00.000Z</published>
    <updated>2019-09-01T09:41:02.321Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Kth%20Largest%20Element&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Kth Largest Element&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;第k大元素问题(k-th Largest Element Problem)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;你有一个整数数组&lt;code&gt;a&lt;/code&gt;。 编写一个算法，在数组中找到第&lt;em&gt;k&lt;/em&gt;大的元素。&lt;/p&gt;
&lt;p&gt;例如，第1个最大元素是数组中出现的最大值。 如果数组具有&lt;em&gt;n&lt;/em&gt;个元素，则第&lt;em&gt;n&lt;/em&gt;最大元素是最小值。 中位数是第&lt;em&gt;n/2&lt;/em&gt;最大元素。&lt;/p&gt;
&lt;h2 id=&quot;朴素的解决方案&quot;&gt;&lt;a href=&quot;#朴素的解决方案&quot; class=&quot;headerlink&quot; title=&quot;朴素的解决方案&quot;&gt;&lt;/a&gt;朴素的解决方案&lt;/h2&gt;&lt;p&gt;以下是半朴素的解决方案。 它的时间复杂度是 &lt;strong&gt;O(nlogn)&lt;/strong&gt;，因为它首先对数组进行排序，因此也使用额外的 &lt;strong&gt;O(n)&lt;/strong&gt; 空间。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;kthLargest&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(a: [Int], k: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;? &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; len = a.&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; k &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; k &amp;lt;= len &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sorted = a.sorted()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sorted[len - k]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="第k大元素问题" scheme="http://andyron.com/tags/%E7%AC%ACk%E5%A4%A7%E5%85%83%E7%B4%A0%E9%97%AE%E9%A2%98/"/>
    
      <category term="k-th Largest Element" scheme="http://andyron.com/tags/k-th-Largest-Element/"/>
    
  </entry>
  
  <entry>
    <title>2-网络分层的真实含义是什么？</title>
    <link href="http://andyron.com/2019/NetworkProtocol-02.html"/>
    <id>http://andyron.com/2019/NetworkProtocol-02.html</id>
    <published>2019-08-29T03:20:00.000Z</published>
    <updated>2019-08-31T03:20:59.617Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是我学习&lt;a href=&quot;https://time.geekbang.org/column/intro/85&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《趣谈网络协议》&lt;/a&gt;的一篇笔记。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;计算机网络是&lt;strong&gt;不仅需要背诵，而且特别需要将原理烂熟于胸的学科&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;1-几个问题&quot;&gt;&lt;a href=&quot;#1-几个问题&quot; class=&quot;headerlink&quot; title=&quot;1.几个问题&quot;&gt;&lt;/a&gt;1.几个问题&lt;/h3&gt;&lt;p&gt;网络分层不恰当的比喻：一家公司也是分“层次”的，分总经理、经理、组长、员工。总经理之间有他们的沟通方式，经理和经理之间也有沟通方式，同理组长和员工。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;TCP 在进行三次握手的时候，IP层和 MAC层对应都有什么操作呢？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;第三层网络层中设计&lt;strong&gt;路由协议&lt;/strong&gt;，说路由就像中转站，我们从原始地址 A 到目标地址D，中间经过两个中转站 A-&amp;gt;B-&amp;gt;C-&amp;gt;D，是通过路由转发的。&lt;/p&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://andyron.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="《趣谈网络协议》学习笔记" scheme="http://andyron.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E3%80%8A%E8%B6%A3%E8%B0%88%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="网络协议" scheme="http://andyron.com/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>1-为什么要学习网络协议？</title>
    <link href="http://andyron.com/2019/NetworkProtocol-01.html"/>
    <id>http://andyron.com/2019/NetworkProtocol-01.html</id>
    <published>2019-08-29T03:00:00.000Z</published>
    <updated>2019-08-29T03:18:47.151Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这是我学习&lt;a href=&quot;https://time.geekbang.org/column/intro/85&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《趣谈网络协议》&lt;/a&gt;的一篇笔记。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/andyRon/LearnNetworking/master/NetworkProtocol/images/NetworkProtocol-01-11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;协议如同人与人的对话，语言不通，无法沟通。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;HelloWorld&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    System.out.println(&lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://andyron.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="《趣谈网络协议》学习笔记" scheme="http://andyron.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E3%80%8A%E8%B6%A3%E8%B0%88%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E3%80%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="网络协议" scheme="http://andyron.com/tags/%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
  <entry>
    <title>Xcode中图标含义总结</title>
    <link href="http://andyron.com/2019/xcode-icon-summary.html"/>
    <id>http://andyron.com/2019/xcode-icon-summary.html</id>
    <published>2019-08-26T12:00:00.000Z</published>
    <updated>2019-09-03T08:29:55.094Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Xcode中不少有点图标和符号，平常使用不怎么注意，仔细思考🤔一下，有的还不清楚啥意思，这边我做个小小的归纳。&lt;/p&gt;
&lt;p&gt;按照显示位置，大概分为以下四类：&lt;/p&gt;
&lt;h3 id=&quot;一、文件后面的字母或符号&quot;&gt;&lt;a href=&quot;#一、文件后面的字母或符号&quot; class=&quot;headerlink&quot; title=&quot;一、文件后面的字母或符号&quot;&gt;&lt;/a&gt;一、文件后面的字母或符号&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://images.andyron.com/2019/8/xcode-icon-4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这些字母或符合对应版本控制（Git，&lt;u&gt;Xcode10已经不再支持SVN&lt;/u&gt;），如果没有使用Git，也可大概看看那些文件修改了或者是新加的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;M&lt;/strong&gt; —— modified，已被修改，需要 commit&lt;br&gt;&lt;strong&gt;A&lt;/strong&gt; —— added，文件是新添加的，已经add，需要 commit&lt;br&gt;&lt;strong&gt;R&lt;/strong&gt; —— 文件被重命名&lt;br&gt;&lt;strong&gt;?&lt;/strong&gt; —— 文件是新添加的，还没有add&lt;br&gt;&lt;strong&gt;D&lt;/strong&gt; —— deleted，文件在服务器上已被删除，这时update的话，可删除本地的文件&lt;br&gt;&lt;strong&gt;C&lt;/strong&gt; —— conflict，冲突&lt;/p&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://andyron.com/categories/iOS/"/>
    
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-最小生成树（未加权图）</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%88%E6%9C%AA%E5%8A%A0%E6%9D%83%E5%9B%BE%EF%BC%89.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-最小生成树（未加权图）.html</id>
    <published>2019-08-02T01:58:00.000Z</published>
    <updated>2019-08-09T17:47:23.375Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Minimum%20Spanning%20Tree(Unweighted&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Minimum Spanning Tree(Unweighted)&lt;/a&gt;)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;最小生成树（未加权图）（Minimum Spanning Tree (Unweighted Graph)）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最小生成树描述了包含访问图中每个节点所需的最小数目边的路径。&lt;/p&gt;
&lt;p&gt;看下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/Minimum%20Spanning%20Tree(Unweighted)/Images/Graph.png&quot; alt=&quot;Graph&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="最小生成树（未加权图）" scheme="http://andyron.com/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%88%E6%9C%AA%E5%8A%A0%E6%9D%83%E5%9B%BE%EF%BC%89/"/>
    
      <category term="Minimum Spanning Tree (Unweighted Graph)" scheme="http://andyron.com/tags/Minimum-Spanning-Tree-Unweighted-Graph/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-最小生成树（加权图）</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%88%E5%8A%A0%E6%9D%83%E5%9B%BE%EF%BC%89.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-最小生成树（加权图）.html</id>
    <published>2019-08-01T01:58:00.000Z</published>
    <updated>2019-08-01T01:57:50.838Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Minimum%20Spanning%20Tree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Minimum Spanning Tree&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;最小生成树（加权图）（Minimum Spanning Tree (Weighted Graph)）&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个主题有一篇辅导&lt;a href=&quot;https://www.raywenderlich.com/169392/swift-algorithm-club-minimum-spanning-tree-with-prims-algorithm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;连接的无向加权图的&lt;a href=&quot;https://en.wikipedia.org/wiki/Minimum_spanning_tree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;最小生成树&lt;/a&gt;（MST）具有来自原始图的边的子集，其将所有顶点连接在一起，没有任何循环并尽可能减少总边权重。 图中可以有多个MST。&lt;/p&gt;
&lt;p&gt;有两种流行的算法来计算图形的MST - &lt;a href=&quot;https://en.wikipedia.org/wiki/Kruskal&amp;#39;s_algorithm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Kruskal算法&lt;/a&gt;和&lt;a href=&quot;https://en.wikipedia.org/wiki/Prim&amp;#39;s_algorithm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Prim算法&lt;/a&gt;。 两种算法的总时间复杂度为&lt;code&gt;O(ElogE)&lt;/code&gt;，其中&lt;code&gt;E&lt;/code&gt;是原始图的边数。&lt;/p&gt;
&lt;h3 id=&quot;Kruskal算法&quot;&gt;&lt;a href=&quot;#Kruskal算法&quot; class=&quot;headerlink&quot; title=&quot;Kruskal算法&quot;&gt;&lt;/a&gt;Kruskal算法&lt;/h3&gt;&lt;p&gt;Sort the edges base on weight. Greedily select the smallest one each time and add into the MST as long as it doesn’t form a cycle.&lt;br&gt;根据权重对边进行排序。每次贪婪地选择最小的一个并且只要它不形成循环就加入MST。&lt;br&gt;Kruskal的算法使用&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Union-Find&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;并查集&lt;/a&gt; 数据结构来检查是否有任何其他边导致循环。逻辑是将所有连接的顶点放在同一个集合中（在并查集的概念中）。如果来自新边的两个顶点不属于同一个集合，那么将该边添加到MST中是安全的。&lt;/p&gt;
&lt;p&gt;下图演示了这个步骤：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/Minimum%20Spanning%20Tree/Images/kruskal.png&quot; alt=&quot;Graph&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="最小生成树（加权图）" scheme="http://andyron.com/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91%EF%BC%88%E5%8A%A0%E6%9D%83%E5%9B%BE%EF%BC%89/"/>
    
      <category term="Minimum Spanning Tree (Weighted Graph)" scheme="http://andyron.com/tags/Minimum-Spanning-Tree-Weighted-Graph/"/>
    
  </entry>
  
  <entry>
    <title>Swift中optionals使用总结</title>
    <link href="http://andyron.com/2019/swift-optionals.html"/>
    <id>http://andyron.com/2019/swift-optionals.html</id>
    <published>2019-07-29T05:40:40.000Z</published>
    <updated>2019-09-02T02:18:21.807Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Github链接：&lt;a href=&quot;https://github.com/andyRon/LearnSwift/blob/master/Tips/Swift中optionals使用总结.md&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/andyRon/LearnSwift/blob/master/Tips/Swift中optionals使用总结.md&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;变量声明&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt;: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;? = &lt;span class=&quot;string&quot;&gt;&quot;unicorn&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; optional2: &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;?&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; optionals: [&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;?] = [&lt;span class=&quot;string&quot;&gt;&quot;unicorn&quot;&lt;/span&gt;, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;dragon&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; optionals2: [&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;]?&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;if let&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; value = &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 多变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; value = &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; value2 = optional2 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 布尔值判断从句（boolean clause）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; value = &lt;span class=&quot;keyword&quot;&gt;optional&lt;/span&gt;, value.hasSuffix(&lt;span class=&quot;string&quot;&gt;&quot;saurus&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="swift" scheme="http://andyron.com/categories/swift/"/>
    
    
      <category term="Swift" scheme="http://andyron.com/tags/Swift/"/>
    
      <category term="optionals" scheme="http://andyron.com/tags/optionals/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-最短路径算法</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-最短路径算法.html</id>
    <published>2019-07-27T03:58:00.000Z</published>
    <updated>2019-07-27T06:57:06.576Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Shortest%20Path%20(Unweighted&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Shortest Path(Unweighted)&lt;/a&gt;)  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;最短路径算法（Shortest Path(Unweighted Graph)）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;目标：找到图中从一个节点到另一个节点的最短路径。&lt;/p&gt;
&lt;p&gt;假设我们以下图为例：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/Shortest%20Path%20(Unweighted)/Images/Graph.png&quot; alt=&quot;Example graph&quot;&gt;&lt;/p&gt;
&lt;p&gt;我们可能想知道从节点&lt;code&gt;A&lt;/code&gt;到节点&lt;code&gt;F&lt;/code&gt;的最短路径是什么。&lt;/p&gt;
&lt;p&gt;如果&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Graph/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图是未加权的&lt;/a&gt;，那么找到最短路径很容易：我们可以使用广度优先搜索算法。 对于加权图，我们可以使用Dijkstra算法。&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="最短路径算法" scheme="http://andyron.com/tags/%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E7%AE%97%E6%B3%95/"/>
    
      <category term="Shortest Path(Unweighted Graph)" scheme="http://andyron.com/tags/Shortest-Path-Unweighted-Graph/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-深度优先搜索</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-深度优先搜索.html</id>
    <published>2019-07-26T01:58:00.000Z</published>
    <updated>2019-07-26T02:08:31.626Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Depth-First%20Search&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Depth-First Search&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&quot;深度优先搜索-DFS，Depth-First-Search&quot;&gt;&lt;a href=&quot;#深度优先搜索-DFS，Depth-First-Search&quot; class=&quot;headerlink&quot; title=&quot;深度优先搜索(DFS，Depth-First Search)&quot;&gt;&lt;/a&gt;深度优先搜索(DFS，Depth-First Search)&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;这个主题已经有辅导&lt;a href=&quot;https://www.raywenderlich.com/157949/swift-algorithm-club-depth-first-search&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;深度优先搜索（DFS）是用于遍历或搜索&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Tree/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;树&lt;/a&gt;或&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Graph/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图&lt;/a&gt;数据结构的算法。它从源节点开始，并在回溯之前尽可能地沿着每个分支进行探索。&lt;/p&gt;
&lt;p&gt;深度优先搜索可以用于有向图和无向图。&lt;/p&gt;
&lt;h2 id=&quot;动画示例&quot;&gt;&lt;a href=&quot;#动画示例&quot; class=&quot;headerlink&quot; title=&quot;动画示例&quot;&gt;&lt;/a&gt;动画示例&lt;/h2&gt;&lt;p&gt;以下是深度优先搜索在图上的工作方式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/Depth-First%20Search/Images/AnimatedExample.gif&quot; alt=&quot;Animated example&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="深度优先搜索" scheme="http://andyron.com/tags/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
      <category term="Depth-First Search" scheme="http://andyron.com/tags/Depth-First-Search/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-广度优先搜索</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-广度优先搜索.html</id>
    <published>2019-07-25T01:58:00.000Z</published>
    <updated>2019-07-25T02:04:42.150Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Breadth-First%20Search&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Breadth-First Search&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;广度优先搜索(BFS，Breadth-First Search)&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个话题已经有个辅导&lt;a href=&quot;https://www.raywenderlich.com/155801/swift-algorithm-club-swift-breadth-first-search&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;广度优先搜索（BFS，Breadth-First Search）是用于遍历、搜索&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Tree/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;树&lt;/a&gt;或&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Graph/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;图&lt;/a&gt;数据结构的算法。它从源节点开始，在移动到下一级邻居之前首先探索直接邻居节点。&lt;/p&gt;
&lt;p&gt;广度优先搜索可以用于有向图和无向图。&lt;/p&gt;
&lt;h2 id=&quot;动画示例&quot;&gt;&lt;a href=&quot;#动画示例&quot; class=&quot;headerlink&quot; title=&quot;动画示例&quot;&gt;&lt;/a&gt;动画示例&lt;/h2&gt;&lt;p&gt;以下是广度优先搜索在图上的工作原理：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/Breadth-First%20Search/Images/AnimatedExample.gif&quot; alt=&quot;广度优先搜索的动画示例&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="广度优先搜索" scheme="http://andyron.com/tags/%E5%B9%BF%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2/"/>
    
      <category term="Breadth-First Search" scheme="http://andyron.com/tags/Breadth-First-Search/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-图</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E5%9B%BE.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-图.html</id>
    <published>2019-07-24T00:28:00.000Z</published>
    <updated>2019-07-24T00:32:37.653Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Graph&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Graph&lt;/a&gt;  &lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;图(Graph)&lt;/strong&gt;  &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个话题已经有个辅导&lt;a href=&quot;https://www.raywenderlich.com/152046/swift-algorithm-club-graphs-adjacency-list&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;图看上去像下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/Graph/Images/Graph.png&quot; alt=&quot;A graph&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="图" scheme="http://andyron.com/tags/%E5%9B%BE/"/>
    
      <category term="Graph" scheme="http://andyron.com/tags/Graph/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-最大公约数算法</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%AE%97%E6%B3%95.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-最大公约数算法.html</id>
    <published>2019-07-21T03:00:00.000Z</published>
    <updated>2019-07-21T03:19:52.932Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/GCD&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Greatest Common Divisor&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;最大公约数算法（Greatest Common Divisor）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;两个数字&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;的 &lt;em&gt;最大公约数&lt;/em&gt;（或最大公因数）是将&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;整除都没有余数的最大正整数。&lt;/p&gt;
&lt;p&gt;例如，&lt;code&gt;gcd(39, 52) = 13&lt;/code&gt;，因为13除以39(&lt;code&gt;39/13 = 3&lt;/code&gt;)以及52(&lt;code&gt;52/13 = 4&lt;/code&gt;)，而且没有比13更大的数字。&lt;/p&gt;
&lt;p&gt;在某些时候你可能不得不在学校里了解这一点。:-)&lt;/p&gt;
&lt;p&gt;找到两个数字的GCD的费力方法是先找出两个数字的因子，然后取其共同的最大数。 问题在于分解数字是非常困难的，特别是当它们变大时。 （从好的方面来说，这种困难也是保证您的在线支付安全的原因。）&lt;/p&gt;
&lt;p&gt;有一种更聪明的方法来计算GCD：欧几里德的算法。 这个算法主要观点是，&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gcd(a, b) = gcd(b, a % b)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中&lt;code&gt;a％b&lt;/code&gt;是&lt;code&gt;a&lt;/code&gt;除以&lt;code&gt;b&lt;/code&gt;的余数。&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="最大公约数算法" scheme="http://andyron.com/tags/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0%E7%AE%97%E6%B3%95/"/>
    
      <category term="Greatest Common Divisor" scheme="http://andyron.com/tags/Greatest-Common-Divisor/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-四叉树</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E5%9B%9B%E5%8F%89%E6%A0%91.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-四叉树.html</id>
    <published>2019-07-13T02:55:00.000Z</published>
    <updated>2019-07-13T03:16:20.399Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/QuadTree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/QuadTree&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;四叉树（QuadTree）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;四叉树是一种&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Tree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;树&lt;/a&gt;，其中每个内部（非叶节点）节点有四个子节点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/QuadTree/Images/quadtree.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="四叉树" scheme="http://andyron.com/tags/%E5%9B%9B%E5%8F%89%E6%A0%91/"/>
    
      <category term="QuadTree" scheme="http://andyron.com/tags/QuadTree/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-八叉树</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E5%85%AB%E5%8F%89%E6%A0%91.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-八叉树.html</id>
    <published>2019-07-13T02:40:00.000Z</published>
    <updated>2019-07-13T02:59:51.009Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Octree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Octree&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;八叉树（Octree）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;八叉树是&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Tree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;树&lt;/a&gt;，其中每个内部（非叶节点）节点有八个子节点。 例如，通常用于游戏中的碰撞检测。&lt;/p&gt;
&lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;p&gt;考虑以下问题：您需要在3D空间中存储多个对象（每个对象在某个位置使用&lt;code&gt;X&lt;/code&gt;，&lt;code&gt;Y&lt;/code&gt;和&lt;code&gt;Z&lt;/code&gt;坐标表示）然后您需要回答哪些对象位于某个3D区域。 一个天真的解决方案是将点存储在一个数组中，然后迭代这些点并分别检查每个点。 该解决方案花费O(n)。&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="八叉树" scheme="http://andyron.com/tags/%E5%85%AB%E5%8F%89%E6%A0%91/"/>
    
      <category term="Octree" scheme="http://andyron.com/tags/Octree/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-字典树</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E5%AD%97%E5%85%B8%E6%A0%91.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-字典树.html</id>
    <published>2019-07-13T02:30:00.000Z</published>
    <updated>2019-07-13T03:09:14.255Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Trie&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Trie&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;字典树（Trie）&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个话题已经有个辅导&lt;a href=&quot;https://www.raywenderlich.com/139410/swift-algorithm-club-swift-trie-data-structure&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;什么是字典树&quot;&gt;&lt;a href=&quot;#什么是字典树&quot; class=&quot;headerlink&quot; title=&quot;什么是字典树&quot;&gt;&lt;/a&gt;什么是字典树&lt;/h2&gt;&lt;p&gt;&lt;code&gt;Trie&lt;/code&gt;（在一些其他实现中也称为前缀树或基数树）是用于存储关联数据结构的特殊类型的树。 &lt;code&gt;Trie&lt;/code&gt;作为一个字典可能如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/andyRon/swift-algorithm-club-cn/raw/master/Trie/images/trie.png&quot; alt=&quot;A Trie&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="字典树" scheme="http://andyron.com/tags/%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    
      <category term="Trie" scheme="http://andyron.com/tags/Trie/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-线段树</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E7%BA%BF%E6%AE%B5%E6%A0%91.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-线段树.html</id>
    <published>2019-07-13T02:10:00.000Z</published>
    <updated>2019-07-13T02:17:40.468Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Segment%20Tree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Segment Tree&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;线段树（Segment Tree）&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有关懒惰传播的示例，请参阅此&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Segment%20Tree/LazyPropagation&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;文章&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我很高兴向您介绍线段树（Segment Tree）。 它实际上是我最喜欢的数据结构之一，因为它非常灵活且实现简单。&lt;/p&gt;
&lt;p&gt;假设你有一个某种类型的数组&lt;strong&gt;a&lt;/strong&gt;和一些关联函数&lt;strong&gt;f&lt;/strong&gt;。 例如，函数可以是求和，乘法，最小，最大，&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/GCD/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;最大公约数&lt;/a&gt;等。&lt;/p&gt;
&lt;p&gt;你的任务是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;回答由&lt;strong&gt;l&lt;/strong&gt;和&lt;strong&gt;r&lt;/strong&gt;给出的间隔的查询，即执行 &lt;code&gt;f(a[l], a[l+1], ..., a[r-1], a[r])&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;支持替换某个索引的一个项目&lt;code&gt;a[index] = newItem&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;例如，如果我们有一个数字数组：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; a = [ &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, -&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;101&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;29&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;61&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt; ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="线段树" scheme="http://andyron.com/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="Segment Tree" scheme="http://andyron.com/tags/Segment-Tree/"/>
    
  </entry>
  
  <entry>
    <title>【译】Swift算法俱乐部-伸展树</title>
    <link href="http://andyron.com/2019/Swift%E7%AE%97%E6%B3%95%E4%BF%B1%E4%B9%90%E9%83%A8-%E4%BC%B8%E5%B1%95%E6%A0%91.html"/>
    <id>http://andyron.com/2019/Swift算法俱乐部-伸展树.html</id>
    <published>2019-07-13T01:58:00.000Z</published>
    <updated>2019-07-13T02:07:37.707Z</updated>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本文是对 &lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt; 翻译的一篇文章。&lt;br&gt;&lt;a href=&quot;https://github.com/raywenderlich/swift-algorithm-club&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Swift Algorithm Club&lt;/a&gt;是 &lt;a href=&quot;https://www.raywenderlich.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;raywenderlich.com&lt;/a&gt;网站出品的用Swift实现算法和数据结构的开源项目，目前在GitHub上有18000+⭐️，我初略统计了一下，大概有一百左右个的算法和数据结构，基本上常见的都包含了，是iOSer学习算法和数据结构不错的资源。&lt;br&gt;🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;andyRon/swift-algorithm-club-cn&lt;/a&gt;是我对Swift Algorithm Club，边学习边翻译的项目。由于能力有限，如发现错误或翻译不妥，请指正，欢迎pull request。也欢迎有兴趣、有时间的小伙伴一起参与翻译和学习🤓。当然也欢迎加⭐️，🤩🤩🤩🤨🤪。&lt;br&gt;本文的翻译原文和代码可以查看🐙&lt;a href=&quot;https://github.com/andyRon/swift-algorithm-club-cn/tree/master/Splay%20Tree&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;swift-algorithm-club-cn/Splay Tree&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;伸展树/分裂树（Splay Tree）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;伸展树是一种数据结构，在结构上与平衡二叉搜索树相同。 在伸展树上执行的每个操作都会导致重新调整，以便快速访问最近运行的值。 在每次访问时，树被重新排列，并且使用一组特定的旋转将访问的节点移动到树的根，这些旋转一起被称为&lt;strong&gt;Splaying&lt;/strong&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="swift-algorithm-club-cn" scheme="http://andyron.com/categories/swift-algorithm-club-cn/"/>
    
    
      <category term="swift" scheme="http://andyron.com/tags/swift/"/>
    
      <category term="算法与数据结构" scheme="http://andyron.com/tags/%E7%AE%97%E6%B3%95%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="伸展树" scheme="http://andyron.com/tags/%E4%BC%B8%E5%B1%95%E6%A0%91/"/>
    
      <category term="Splay Tree" scheme="http://andyron.com/tags/Splay-Tree/"/>
    
  </entry>
  
</feed>
